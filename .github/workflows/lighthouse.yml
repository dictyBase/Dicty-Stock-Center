name: Lighthouse CI
on: 
  pull_request:
    types: [opened, synchronize] # change to 'opened' when finished
    branches:
      - develop
jobs:
  lighthouse:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    steps:
      - name: set up node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: check out code
        uses: actions/checkout@v2
      - name: run lighthouse
        id: lighthouse
        uses: treosh/lighthouse-ci-action@v3
        with:
          urls: |
            https://eric.dictybase.dev/stockcenter
            https://eric.dictybase.dev/stockcenter/strains
          uploadArtifacts: true # save results as an action artifacts
          temporaryPublicStorage: true # upload lighthouse report to the temporary storage
      # - run: mkdir /tmp/artifacts
      # - name: run lighthouse
      #   uses: foo-software/lighthouse-check-action@master
      #   id: lighthouseCheck
      #   with:
      #     accessToken: ${{ secrets.REPO_ACCESS_TOKEN }}
      #     emulatedFormFactor: "desktop"
      #     outputDirectory: /tmp/artifacts
      #     urls: 'https://eric.dictybase.dev/stockcenter'
          # urls: 'https://eric.dictybase.dev/stockcenter,https://eric.dictybase.dev/stockcenter/strains,https://eric.dictybase.dev/stockcenter/plasmids,https://eric.dictybase.dev/stockcenter/strains/DBS0236921,https://eric.dictybase.dev/stockcenter/information/faq,https://eric.dictybase.dev/stockcenter/information/order,https://eric.dictybase.dev/stockcenter/information/payment,https://eric.dictybase.dev/stockcenter/information/deposit,https://eric.dictybase.dev/stockcenter/information/nomenclature-guidelines'
      # - name: upload artifacts
      #   uses: actions/upload-artifact@master
      #   with:
      #     name: Lighthouse reports
      #     path: /tmp/artifacts
      - name: github script
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            console.log(${{ steps.lighthouse.outputs.links }})
            console.log(${{ steps.lighthouse.outputs.assertionResults }})
            console.log(${{ steps.lighthouse.outputs.manifest }})
            let body = ''
            for (const [key, value] of Object.entries(${{ steps.lighthouse.outputs.links }})) {
              let k = JSON.parse(key)
              let v = JSON.parse(value)
              body := `[${k}](${v})`
            }
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })
      # - name: handle lighthouse check results
      #   uses: foo-software/lighthouse-check-status-action@master
      #   with:
      #     lighthouseCheckResults: ${{ steps.lighthouseCheck.outputs.lighthouseCheckResults }}
      #     minAccessibilityScore: "50"
      #     minBestPracticesScore: "50"
      #     minPerformanceScore: "90"
      #     minProgressiveWebAppScore: "0"
      #     minSeoScore: "50"
