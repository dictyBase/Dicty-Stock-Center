name: Node CI Develop
on:
  push:
    branches:
      - develop
jobs:
  test:
    runs-on: ubuntu-18.04
    steps:
      - name: set up node.js
        uses: actions/setup-node@v1
        with:
          node-version: 10.x
      - name: check out code
        uses: actions/checkout@v1
      - name: cache npm dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: npm install and test
        run: |
          mv src/common/utils/clientConfig.sample.ts src/common/utils/clientConfig.ts
          npm ci
          npm test -- --coverage
        env:
          CI: true
      - name: upload coverage to codecov
        uses: codecov/codecov-action@v1.0.2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  build:
    needs: test
    runs-on: ubuntu-18.04
    steps:
      - name: set up node.js
        uses: actions/setup-node@v1
        with:
          node-version: 10.x
      - name: check out code
        uses: actions/checkout@v1
      - name: build ericdev docker image
        run: docker build -t dictybase/dicty-stock-center:ericdev-develop-$(git rev-parse --short HEAD) -f docker/eric-dev/Dockerfile .
      - name: build devsidd docker image
        run: docker build -t dictybase/dicty-stock-center:devsidd-develop-$(git rev-parse --short HEAD) -f docker/sidd-dev/Dockerfile .
      - name: login to docker hub
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: push ericdev to docker hub
        run: docker push dictybase/dicty-stock-center:ericdev-develop-$(git rev-parse --short HEAD)
      - name: push devsidd to docker hub
        run: docker push dictybase/dicty-stock-center:devsidd-develop-$(git rev-parse --short HEAD)
